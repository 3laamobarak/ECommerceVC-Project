// <auto-generated />
using System;
using ECommerceContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceContext.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250512102136_multitaskssssss")]
    partial class multitaskssssss
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcommercModels.CartItem", b =>
                {
                    b.Property<int>("CartItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemID"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CartItemID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            CartItemID = 1,
                            DateAdded = new DateTime(2002, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductID = 1,
                            Quantity = 1,
                            UserID = 1
                        },
                        new
                        {
                            CartItemID = 2,
                            DateAdded = new DateTime(2002, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductID = 3,
                            Quantity = 2,
                            UserID = 1
                        },
                        new
                        {
                            CartItemID = 3,
                            DateAdded = new DateTime(2002, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductID = 4,
                            Quantity = 1,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("EcommercModels.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Description = "Electronic devices and gadgets",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryID = 2,
                            Description = "Apparel and accessories",
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryID = 3,
                            Description = "Literature and educational materials",
                            Name = "Books"
                        },
                        new
                        {
                            CategoryID = 4,
                            Description = "Appliances for home use",
                            Name = "Home Appliances"
                        },
                        new
                        {
                            CategoryID = 5,
                            Description = "Sports equipment and apparel",
                            Name = "Sports"
                        },
                        new
                        {
                            CategoryID = 6,
                            Description = "Children's toys and games",
                            Name = "Toys"
                        },
                        new
                        {
                            CategoryID = 7,
                            Description = "Beauty and personal care products",
                            Name = "Beauty"
                        },
                        new
                        {
                            CategoryID = 8,
                            Description = "Automotive parts and accessories",
                            Name = "Automotive"
                        });
                });

            modelBuilder.Entity("EcommercModels.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<DateTime?>("DateProcessed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            TotalAmount = 699.99m,
                            UserID = 1
                        },
                        new
                        {
                            OrderID = 2,
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            TotalAmount = 19.99m,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("EcommercModels.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID1")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductID1");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailID = 1,
                            OrderID = 1,
                            ProductID = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 2,
                            OrderID = 2,
                            ProductID = 3,
                            Quantity = 2
                        },
                        new
                        {
                            OrderDetailID = 3,
                            OrderID = 1,
                            ProductID = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderDetailID = 4,
                            OrderID = 2,
                            ProductID = 4,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("EcommercModels.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryID = 1,
                            Description = "Latest model smartphone",
                            Name = "Smartphone",
                            Price = 699.99m,
                            UnitsInStock = 50
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryID = 1,
                            Description = "High-performance laptop",
                            Name = "Laptop",
                            Price = 1299.99m,
                            UnitsInStock = 30
                        },
                        new
                        {
                            ProductID = 3,
                            CategoryID = 2,
                            Description = "Cotton t-shirt",
                            Name = "T-shirt",
                            Price = 19.99m,
                            UnitsInStock = 100
                        },
                        new
                        {
                            ProductID = 4,
                            CategoryID = 2,
                            Description = "Denim jeans",
                            Name = "Jeans",
                            Price = 49.99m,
                            UnitsInStock = 80
                        },
                        new
                        {
                            ProductID = 5,
                            CategoryID = 3,
                            Description = "Bestselling novel",
                            Name = "Novel",
                            Price = 14.99m,
                            UnitsInStock = 200
                        },
                        new
                        {
                            ProductID = 6,
                            CategoryID = 4,
                            Description = "Electric cooker",
                            Name = "Cooker",
                            Price = 89.99m,
                            UnitsInStock = 40
                        },
                        new
                        {
                            ProductID = 7,
                            CategoryID = 5,
                            Description = "Official size soccer ball",
                            Name = "Soccer Ball",
                            Price = 29.99m,
                            UnitsInStock = 60
                        },
                        new
                        {
                            ProductID = 8,
                            CategoryID = 6,
                            Description = "Collectible action figure",
                            Name = "Action Figure",
                            Price = 24.99m,
                            UnitsInStock = 150
                        },
                        new
                        {
                            ProductID = 9,
                            CategoryID = 7,
                            Description = "Long-lasting lipstick",
                            Name = "Lipstick",
                            Price = 15.99m,
                            UnitsInStock = 120
                        },
                        new
                        {
                            ProductID = 10,
                            CategoryID = 8,
                            Description = "12V car battery",
                            Name = "Car Battery",
                            Price = 89.99m,
                            UnitsInStock = 20
                        });
                });

            modelBuilder.Entity("EcommercModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "3al@gmail.com",
                            FirstName = "Alaa",
                            IsActive = 0,
                            LastLoginDate = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Mobarak",
                            Password = "asdasdasa",
                            Role = 2,
                            Username = "lolomomo"
                        });
                });

            modelBuilder.Entity("EcommercModels.CartItem", b =>
                {
                    b.HasOne("EcommercModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommercModels.User", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EcommercModels.Order", b =>
                {
                    b.HasOne("EcommercModels.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EcommercModels.OrderDetail", b =>
                {
                    b.HasOne("EcommercModels.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommercModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommercModels.Product", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID1");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EcommercModels.Product", b =>
                {
                    b.HasOne("EcommercModels.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommercModels.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EcommercModels.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EcommercModels.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EcommercModels.User", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
